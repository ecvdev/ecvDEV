@model ecvAdminUI.ViewModels.Catalog.CategoryViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
 @using (Html.BeginForm("DeleteConfirmed", "Category",
                          FormMethod.Post, new { enctype = "multipart/form-data" }))
 {
    @Html.AntiForgeryToken()

        <div class="form-horizontal">
        @{string _Title = ""; } 
        @if (Model.operationType == ecvLib.Core.ecvOperationStatus.ecvOperationStatus.OperationType.Detail)
        {
            _Title = "Display Category Details";
        }
        else if (Model.operationType == ecvLib.Core.ecvOperationStatus.ecvOperationStatus.OperationType.Delete)
        {
            _Title = "Delete Category";
        }

            <fieldset>
                <h4>
                    @_Title : @Model.categoryModel.Name
                </h4>
                <div>
                    <table style="width:100%">
                        <tbody>
                            <tr>
                                <td style="width:50%">
                                    <div>
                                        @Html.ActionLink("Back to List", "List")
                                    </div>
                                </td>
                                <td style="width:50%; float:none">
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            @if (Model.operationType == ecvLib.Core.ecvOperationStatus.ecvOperationStatus.OperationType.Detail)
                                            {
                                                @Html.ActionLink("Edit", "Edit", new { categoryID = @Model.categoryModel.Id })
                                                <span>   </span>
                                                @Html.ActionLink("Delete", "Delete", new { categoryID = @Model.categoryModel.Id })
                                            }
                                            else if (Model.operationType == ecvLib.Core.ecvOperationStatus.ecvOperationStatus.OperationType.Delete)
                                            {
                                                <p class="label label-danger">Do you want to delete this record?</p>
                                                @*@Html.ActionLink("Yes", "DeleteConfirmed", new { categoryViewModel = @Model })*@
                                                <input type="submit" value="Yes" class="btn btn-link" />
                                            }
                                        </div>
                                    </div>
                                </td>

                            </tr>
                        </tbody>
                    </table>
                </div>

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.categoryModel.Id)


                <ul class="nav nav-tabs">
                    <li class="active"><a href="#tabCategoryInfo" data-toggle="tab">Category Info</a></li>
                    <li><a href="#tabSEO" data-toggle="tab">SEO</a></li>
                    <li><a href="#tabProducts" data-toggle="tab">Products</a></li>
                </ul>

                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade active in" id="tabCategoryInfo">
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.CategoryTemplateId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.CategoryTemplateId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.CategoryTemplateId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.ParentCategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.categoryModel.ParentCategoryId, new SelectList(Model.categoryListModel, "Id", "CategoryFullName", ""), new { @class = "form-control", disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.categoryModel.ParentCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.PictureId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.PictureId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.PictureId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.PageSize, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.PageSize, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.PageSize, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.AllowCustomersToSelectPageSize, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.AllowCustomersToSelectPageSize, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.AllowCustomersToSelectPageSize, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.PageSizeOptions, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.PageSizeOptions, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.PageSizeOptions, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.PriceRanges, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.PriceRanges, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.PriceRanges, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.ShowOnHomePage, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.ShowOnHomePage, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.ShowOnHomePage, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.IncludeInTopMenu, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.IncludeInTopMenu, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.IncludeInTopMenu, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.SubjectToAcl, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.SubjectToAcl, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.SubjectToAcl, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.LimitedToStores, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.LimitedToStores, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.LimitedToStores, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.Published, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.Published, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.Published, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.Deleted, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.categoryModel.Deleted, new { htmlAttributes = new { @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.categoryModel.Deleted, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.DisplayOrder, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.DisplayOrder, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.CreatedOnUtc, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.CreatedOnUtc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.CreatedOnUtc, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.UpdatedOnUtc, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.UpdatedOnUtc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.UpdatedOnUtc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div> @*End of -- <div class="tab-pane fade active in" id="tabCategoryInfo">*@

                    <div class="tab-pane fade" id="tabSEO">
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.MetaKeywords, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.MetaKeywords, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.MetaDescription, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.MetaDescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.MetaDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryModel.MetaTitle, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.categoryModel.MetaTitle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.categoryModel.MetaTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div> @*End of -- <div class="tab-pane fade active in" id="tabSEO">*@

                    <div class="tab-pane fade" id="tabProducts">
                        <h4>In progress...</h4>
                    </div>
                </div> @*End of -- <div id="myTabContent" class="tab-content">*@


            </fieldset>
        </div> @*End of -- < div class="form-horizontal">*@
            }
</div>